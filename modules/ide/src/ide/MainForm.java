/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ide;

import java.io.File;
import java.io.FileReader;
import java.util.Arrays;

/**
 *
 * @author mipt
 */
public class MainForm extends javax.swing.JFrame {

    public static File curFile;
    
    //output message to "IDE terminal" in format <prefix>+<message>
    private void log(String prefix, String message) {
      jTextAreaOutput.setText(jTextAreaOutput.getText() + prefix + message);
    }
    //output message to "IDE terminal" in format <prefix>+<message>+'\n'
    private void logln(String prefix, String message) {
      log(prefix, message + '\n');
    }
    //output text to "IDE editor" in format <message>
    private void output(String text) {
      textAreaInput.append(text);
    }
    //output text to "IDE editor" in format <message>+'\n'
    private void outputln(String text) {
      output(text + '\n');
    }
    //clear "IDE editor"
    private void outputClear() {
      textAreaInput.setText("");
    }
    //read File and output it to text editor
    private boolean downloadFile(File iFile) {
      if (!iFile.exists()) {
        System.out.println("File does not exist");
        logln("Error: ", "File does not exist");
        return false;
      }
      if(!iFile.canRead()) {
        System.out.println("File can not be read");
        logln("Error: ", "File can not be read");
        return false;
      }
      try (FileReader reader = new FileReader(iFile)) {
        char[] buf = new char[256];
        int c;
        while((c = reader.read(buf))>0){  
          if(c < 256) {
            buf = Arrays.copyOf(buf, c);
            output(new String(buf));
          }
        }
      }
      catch (Exception ex) {
         System.out.println(ex);
         logln("Error: ", "Promblems with file reading");
         return false;
      }
      System.out.println("menu->file->open->" + iFile);
      logln("Message: ", "File sucessfully downlad");  
      return true;
    }
      
    /** Creates new form MainForm */
    public MainForm() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {

    jFileChooser = new javax.swing.JFileChooser();
    textAreaInput = new java.awt.TextArea();
    jTextAreaOutput = new javax.swing.JTextArea();
    jMenuBar = new javax.swing.JMenuBar();
    jMenuFile = new javax.swing.JMenu();
    jMenuItemFileOpen = new javax.swing.JMenuItem();
    jMenuItemFileSave = new javax.swing.JMenuItem();
    jMenuItemFileSaveAs = new javax.swing.JMenuItem();
    jMenuEdit = new javax.swing.JMenu();
    jMenuRun = new javax.swing.JMenu();

    jFileChooser.setToolTipText("");
    jFileChooser.setName(""); // NOI18N

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    textAreaInput.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    getContentPane().add(textAreaInput, java.awt.BorderLayout.CENTER);

    jTextAreaOutput.setColumns(20);
    jTextAreaOutput.setLineWrap(true);
    jTextAreaOutput.setRows(5);
    jTextAreaOutput.setEnabled(false);
    getContentPane().add(jTextAreaOutput, java.awt.BorderLayout.PAGE_END);

    jMenuFile.setText("File");

    jMenuItemFileOpen.setText("Open");
    jMenuItemFileOpen.setToolTipText("");
    jMenuItemFileOpen.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jMenuItemFileOpenActionPerformed(evt);
      }
    });
    jMenuFile.add(jMenuItemFileOpen);

    jMenuItemFileSave.setText("Save");
    jMenuItemFileSave.setToolTipText("");
    jMenuItemFileSave.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jMenuItemFileSaveActionPerformed(evt);
      }
    });
    jMenuFile.add(jMenuItemFileSave);

    jMenuItemFileSaveAs.setText("Save as");
    jMenuItemFileSaveAs.setToolTipText("");
    jMenuItemFileSaveAs.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jMenuItemFileSaveAsActionPerformed(evt);
      }
    });
    jMenuFile.add(jMenuItemFileSaveAs);

    jMenuBar.add(jMenuFile);

    jMenuEdit.setText("Edit");
    jMenuBar.add(jMenuEdit);

    jMenuRun.setText("Edit");
    jMenuBar.add(jMenuRun);

    setJMenuBar(jMenuBar);

    pack();
  }// </editor-fold>//GEN-END:initComponents
//action on menu item Open that opens and reads the file
  private void jMenuItemFileOpenActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItemFileOpenActionPerformed
  {//GEN-HEADEREND:event_jMenuItemFileOpenActionPerformed
    jFileChooser.setSelectedFile(new File(""));
    jFileChooser.showOpenDialog(this);
    File iFile = jFileChooser.getSelectedFile();
    outputClear();
    if (downloadFile(iFile))
      curFile = iFile;
    else
      curFile = null;
  }//GEN-LAST:event_jMenuItemFileOpenActionPerformed

  private void jMenuItemFileSaveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItemFileSaveActionPerformed
  {//GEN-HEADEREND:event_jMenuItemFileSaveActionPerformed
    System.out.println("menu->file->open->save");
  }//GEN-LAST:event_jMenuItemFileSaveActionPerformed

  private void jMenuItemFileSaveAsActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItemFileSaveAsActionPerformed
  {//GEN-HEADEREND:event_jMenuItemFileSaveAsActionPerformed
    jFileChooser.setSelectedFile(new File(""));
    jFileChooser.showSaveDialog(this);
    File oFile = jFileChooser.getSelectedFile();
    if (oFile.exists()) {
      System.out.println("File already exist");
      return;
    }
    System.out.println("menu->file->->saveas->" + oFile);
  }//GEN-LAST:event_jMenuItemFileSaveAsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JFileChooser jFileChooser;
  private javax.swing.JMenuBar jMenuBar;
  private javax.swing.JMenu jMenuEdit;
  private javax.swing.JMenu jMenuFile;
  private javax.swing.JMenuItem jMenuItemFileOpen;
  private javax.swing.JMenuItem jMenuItemFileSave;
  private javax.swing.JMenuItem jMenuItemFileSaveAs;
  private javax.swing.JMenu jMenuRun;
  private javax.swing.JTextArea jTextAreaOutput;
  private java.awt.TextArea textAreaInput;
  // End of variables declaration//GEN-END:variables

}
